**Project Description**

This project is to be used as a guide to understand linked structures and pointers work. 

It is separated into a bunch of different classes to explain the different operations
that can be done on Single Linked Lists. The programs are independently runnable to demonstrate
the various operations that can be performed on a single linked list.

It should be noted that the different classes provided detail the steps and methods required to
perform each of the operations on a Single Linked List. It does not utilise OO concepts and acts 
as a guide to explain how the operations work individually.

A description of the following classes are outlined below -

1. Node.java

This is the data structure that represents a node in a Single Linked List. The node only
contains a single pointer to it's successor and only contains a single data field (Name).

It contains getter methods to retrieve the data fields and also the pointers to its successor.

2. SearchingSingleLinkedLists.java

This class details the implementation of searching for an item in a Single Linked List. It 
covers the search performed both iteratively and recursively.

3. InsertIntoHeadOfSingleLinkedList

This class details the implementation of inserting an item into the head of a Single Linked List.

4. InsertIntoEndOfSingleLinkedList

This class details the implementation of inserting an item into the tail of a Single Linked List.

5. DeleteNodeFromSingleLinkedList

This class details the steps required to delete/remove an node from a Single Linked List.

References - 

The code provided here should be used alongside the notes that are provided in the tutorial 
blogs located at

1 - http://szestudios.blogspot.com.au/2014/04/linked-structures-and-pointers.html 
